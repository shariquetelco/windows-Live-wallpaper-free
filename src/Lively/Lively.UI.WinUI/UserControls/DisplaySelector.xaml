<UserControl
    x:Class="Lively.UI.WinUI.UserControls.DisplaySelector"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:customConverters="using:Lively.UI.WinUI.Helpers.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:data="using:Lively.Models"
    xmlns:local="using:Lively.UI.WinUI.UserControls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Loaded="UserControl_Loaded"
    SizeChanged="UserControl_SizeChanged"
    Unloaded="UserControl_Unloaded"
    mc:Ignorable="d">

    <UserControl.Resources>
        <customConverters:BooleanToVisibilityConverter x:Key="VisibilityConverter" />
    </UserControl.Resources>

    <Grid>
        <ItemsControl ItemsSource="{x:Bind Displays, Mode=OneWay}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate x:DataType="data:ScreenLayoutModel">
                    <Grid
                        Width="{Binding NormalizedBounds.Width, Mode=OneWay}"
                        Height="{Binding NormalizedBounds.Height, Mode=OneWay}"
                        Background="{ThemeResource SystemChromeLowColor}"
                        CornerRadius="5"
                        PointerEntered="Grid_PointerEntered"
                        PointerExited="Grid_PointerExited"
                        PointerPressed="Grid_PointerPressed">
                        <!--  Hover animation, issue: Not working until layout is changed and redrawn  -->
                        <!--<Interactivity:Interaction.Behaviors>
                            <Core:EventTriggerBehavior EventName="PointerEntered">
                                <Core:ChangePropertyAction PropertyName="Background">
                                    <Core:ChangePropertyAction.Value>
                                        <SolidColorBrush Color="{ThemeResource SystemChromeMediumLowColor}" />
                                    </Core:ChangePropertyAction.Value>
                                </Core:ChangePropertyAction>
                            </Core:EventTriggerBehavior>
                            <Core:EventTriggerBehavior EventName="PointerExited">
                                <Core:ChangePropertyAction PropertyName="Background">
                                    <Core:ChangePropertyAction.Value>
                                        <SolidColorBrush Color="{ThemeResource SystemChromeLowColor}" />
                                    </Core:ChangePropertyAction.Value>
                                </Core:ChangePropertyAction>
                            </Core:EventTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>-->

                        <!--  Canvas (Left, Top) not working: https://stackoverflow.com/questions/22324359/add-n-rectangles-to-canvas-with-mvvm-in-wpf  -->
                        <!--  x:Bind have issues with null values  -->
                        <Grid.RenderTransform>
                            <TranslateTransform X="{Binding NormalizedBounds.Left, Mode=OneWay}" Y="{Binding NormalizedBounds.Top, Mode=OneWay}" />
                        </Grid.RenderTransform>
                        <!--  Information  -->
                        <ToolTipService.ToolTip>
                            <StackPanel Spacing="5">
                                <TextBlock Foreground="{ThemeResource SystemAccentColorLight1}">
                                    <Run Text="{Binding Screen.DisplayName}" />
                                    <Run Text="(" />
                                    <Run Text="{Binding Screen.Bounds.Width}" />
                                    <Run Text="x" />
                                    <Run Text="{Binding Screen.Bounds.Height}" />
                                    <Run Text=")" />
                                </TextBlock>
                                <Line Stroke="#50ffffff" X2="400" />
                                <TextBlock Text="{Binding Screen.DeviceId}" TextTrimming="CharacterEllipsis" />
                            </StackPanel>
                        </ToolTipService.ToolTip>
                        <!--  Wallpaper preview  -->
                        <Image
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Opacity="1"
                            Source="{Binding ScreenImagePath, Mode=OneWay}"
                            Stretch="UniformToFill" />
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="12"
                            Text="{Binding ScreenTitle, Mode=OneWay}" />
                        <!--  Improve label visiblity  -->
                        <Rectangle>
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                    <GradientStop Offset="0" Color="#00000000" />
                                    <GradientStop Offset="1" Color="{ThemeResource SystemAltMediumColor}" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <!--  Improve display visibility  -->
                        <Border
                            BorderBrush="{ThemeResource SystemBaseMediumColor}"
                            BorderThickness="1"
                            CornerRadius="5"
                            Opacity="0.5" />
                        <!--  Selection  -->
                        <Grid Visibility="{Binding IsSelected, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
                            <Border
                                BorderBrush="{ThemeResource SystemAccentColor}"
                                BorderThickness="1"
                                CornerRadius="5" />
                            <Rectangle Opacity="0.75">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0" Color="#00000000" />
                                        <GradientStop Offset="1" Color="{ThemeResource SystemAccentColor}" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Grid>
                        <!--  Labels  -->
                        <TextBlock
                            Margin="5,0,0,0"
                            FontSize="18"
                            Text="{Binding Screen.Index, Mode=OneWay}" />
                        <FontIcon
                            Margin="5"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            FontSize="12"
                            Glyph="&#xEA8A;"
                            Opacity="0.5"
                            Visibility="{Binding Screen.IsPrimary, Mode=OneWay}" />
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</UserControl>
