<winex:WindowEx
    x:Class="Lively.UI.WinUI.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:animations="using:CommunityToolkit.WinUI.Animations"
    xmlns:converters="using:CommunityToolkit.WinUI.Converters"
    xmlns:customControls="using:Lively.UI.WinUI.UserControls"
    xmlns:customConverters="using:Lively.UI.WinUI.Helpers.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:enums="using:Lively.Models.Enums"
    xmlns:helper="using:Lively.UI.WinUI.Helpers"
    xmlns:local="using:Lively.UI.WinUI"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkit="using:CommunityToolkit.WinUI.Controls"
    xmlns:ui="using:CommunityToolkit.WinUI"
    xmlns:winex="using:WinUIEx"
    Title="Lively Wallpaper"
    Width="875"
    Height="875"
    MinWidth="700"
    MinHeight="700"
    Closed="Window_Closed"
    TaskBarIcon="appicon.ico"
    mc:Ignorable="d">

    <Grid x:Name="Root">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid.Resources>
            <converters:EmptyStringToObjectConverter
                x:Key="StringToBoolConverter"
                EmptyValue="False"
                NotEmptyValue="True" />
            <converters:StringVisibilityConverter x:Key="StringVisibilityConverter" />
            <converters:BoolNegationConverter x:Key="BoolNegationConverter" />
            <customConverters:BoolToBackButtonVisibilityConverter x:Key="BoolToBackButtonVisibilityConverter" />
            <customConverters:UriToBitmapImageConverter x:Key="UriToBitmapImageConverter" />
            <customConverters:BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />

            <!--  Why? Setting FontIcon Visibility to Collapsed still leaves empty space.  -->
            <DataTemplate x:Key="NavigationMainMenuItemTemplate">
                <NavigationViewItem
                    Content="{Binding Name}"
                    Tag="{Binding PageType}"
                    Visibility="{Binding DataContext.IsSettingsPage, ElementName=Root, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Reverse}">
                    <NavigationViewItem.InfoBadge>
                        <InfoBadge Visibility="{Binding IsAlert, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" Value="{Binding Alert}" />
                    </NavigationViewItem.InfoBadge>
                    <NavigationViewItem.Icon>
                        <FontIcon Glyph="{Binding Glyph}" />
                    </NavigationViewItem.Icon>
                </NavigationViewItem>
            </DataTemplate>
            <DataTemplate x:Key="NavigationSettingMenuItemTemplate">
                <NavigationViewItem
                    Content="{Binding Name}"
                    Tag="{Binding PageType}"
                    Visibility="{Binding DataContext.IsSettingsPage, ElementName=Root, Converter={StaticResource BoolToVisibilityConverter}}" />
            </DataTemplate>
            <helper:NavigationMenuItemTemplateSelector
                x:Key="NavigationMenuItemTemplateSelector"
                MainTemplate="{StaticResource NavigationMainMenuItemTemplate}"
                SettingsTemplate="{StaticResource NavigationSettingMenuItemTemplate}" />
        </Grid.Resources>

        <Interactivity:Interaction.Behaviors>
            <!--  Wait for INavigator.Frame to be initialized  -->
            <Core:EventTriggerBehavior EventName="Loaded">
                <Core:InvokeCommandAction Command="{Binding OpenHomeCommand}" />
            </Core:EventTriggerBehavior>
        </Interactivity:Interaction.Behaviors>

        <!--  Custom background  -->
        <Image
            x:Name="backgroundImage"
            Grid.RowSpan="2"
            Source="{Binding AppThemeBackground, Mode=OneWay}"
            Stretch="UniformToFill"
            Visibility="{Binding AppThemeBackground, Mode=OneWay, Converter={StaticResource StringVisibilityConverter}}" />
        <Rectangle
            Grid.Row="0"
            Fill="{ThemeResource SystemAltMediumColor}"
            Stretch="Fill"
            Visibility="{Binding AppThemeBackground, Mode=OneWay, Converter={StaticResource StringVisibilityConverter}}" />
        <Rectangle
            Grid.RowSpan="2"
            Fill="{ThemeResource SystemControlAcrylicElementBrush}"
            Stretch="Fill"
            Visibility="{Binding AppThemeBackground, Mode=OneWay, Converter={StaticResource StringVisibilityConverter}}" />

        <Grid x:Name="AppTitleBar" Height="48">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="LeftPaddingColumn" Width="0" />
                <ColumnDefinition x:Name="IconColumn" Width="Auto" />
                <ColumnDefinition x:Name="TitleColumn" Width="Auto" />
                <ColumnDefinition x:Name="LeftDragColumn" Width="*" />
                <ColumnDefinition x:Name="SearchColumn" Width="Auto" />
                <ColumnDefinition x:Name="RightDragColumn" Width="*" />
                <ColumnDefinition x:Name="RightPaddingColumn" Width="0" />
            </Grid.ColumnDefinitions>
            <Image
                x:Name="TitleBarIcon"
                Grid.Column="1"
                Width="16"
                Height="16"
                Margin="8,0,0,0"
                Source="ms-appx:///Assets/icon-lively-48.png" />
            <TextBlock
                x:Name="TitleTextBlock"
                Grid.Column="2"
                Margin="4,0,0,0"
                VerticalAlignment="Center"
                Style="{StaticResource CaptionTextBlockStyle}"
                Text="Lively Wallpaper" />
            <AutoSuggestBox
                x:Name="SearchBox"
                x:Uid="SearchBox"
                Grid.Column="4"
                Width="360"
                Margin="4,0"
                VerticalAlignment="Center"
                IsEnabled="True"
                QueryIcon="Find"
                QuerySubmitted="AutoSuggestBox_QuerySubmitted"
                SuggestionChosen="AutoSuggestBox_SuggestionChosen"
                TextChanged="AutoSuggestBox_TextChanged"
                Visibility="Visible" />
        </Grid>

        <TeachingTip
            x:Name="toggleTeachingTipControlPanel"
            x:Uid="ControlPanel"
            IsOpen="{Binding IsControlPanelTeachingTipOpen}"
            Target="{x:Bind controlPanelLabel}">
            <TeachingTip.IconSource>
                <FontIconSource Glyph="&#xE946;" />
            </TeachingTip.IconSource>
        </TeachingTip>

        <NavigationView
            x:Name="navView"
            Grid.Row="1"
            IsBackButtonVisible="{Binding IsSettingsPage, Mode=OneWay, Converter={StaticResource BoolToBackButtonVisibilityConverter}}"
            IsBackEnabled="True"
            IsSettingsVisible="False"
            MenuItemTemplateSelector="{StaticResource NavigationMenuItemTemplateSelector}"
            MenuItemsSource="{Binding MenuItems, Mode=OneWay}"
            PaneDisplayMode="Top"
            SelectedItem="{Binding SelectedMenuItem, Mode=TwoWay}">
            <Interactivity:Interaction.Behaviors>
                <Core:EventTriggerBehavior EventName="BackRequested">
                    <Core:InvokeCommandAction Command="{Binding OpenHomeCommand}" />
                </Core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
            <!--  Footer  -->
            <NavigationView.PaneFooter>
                <!--  Add Wallpaper  -->
                <CommandBar
                    Name="navCommandBar"
                    DefaultLabelPosition="Right"
                    Visibility="{Binding IsSettingsPage, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}">
                    <AppBarButton
                        x:Name="addWallpaperLabel"
                        x:Uid="AddWallpaper"
                        MaxWidth="50"
                        Command="{Binding OpenAddWallpaperCommand}"
                        LabelPosition="Collapsed">
                        <ToolTipService.ToolTip>
                            <ToolTip>
                                <TextBlock x:Uid="AddWallpaperDrop" />
                            </ToolTip>
                        </ToolTipService.ToolTip>
                        <AppBarButton.Icon>
                            <FontIcon Glyph="&#xE710;" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <!--  Control Panel  -->
                    <AppBarButton
                        x:Name="controlPanelLabel"
                        x:Uid="ActiveWallpapers"
                        MaxWidth="50"
                        Command="{Binding OpenControlPanelCommand}"
                        LabelPosition="Collapsed">
                        <ToolTipService.ToolTip>
                            <ToolTip>
                                <TextBlock Text="{Binding WallpaperCountMessage}" />
                            </ToolTip>
                        </ToolTipService.ToolTip>
                        <AppBarButton.Icon>
                            <FontIcon FontFamily="{StaticResource CustomIconFonts}" Glyph="{Binding WallpaperCountGlyph}">
                                <animations:Explicit.Animations>
                                    <animations:AnimationSet x:Name="activeWallpaperOffsetAnimation">
                                        <animations:OffsetAnimation
                                            From="0,0,0"
                                            To="0,-5,0"
                                            Duration="0:0:01" />
                                        <animations:OffsetAnimation
                                            From="0,-5,0"
                                            To="0,0,0"
                                            Duration="0:0:01" />
                                    </animations:AnimationSet>
                                </animations:Explicit.Animations>
                            </FontIcon>
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <!--  Patreon  -->
                    <AppBarButton
                        Name="coffeeBtn"
                        MaxWidth="50"
                        Command="{Binding OpenPatreonCommand}"
                        LabelPosition="Collapsed"
                        ToolTipService.ToolTip="Patreon">
                        <AppBarButton.Icon>
                            <FontIcon FontFamily="{StaticResource CustomIconFonts}" Glyph="&#xE90b;" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <AppBarSeparator />
                    <!--  Gallery Authorized  -->
                    <!--  Visibility="{Binding IsLoggedIn, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"  -->
                    <AppBarButton
                        MaxWidth="50"
                        Padding="0"
                        LabelPosition="Collapsed"
                        Visibility="Collapsed">
                        <AppBarButton.Flyout>
                            <Flyout>
                                <StackPanel MinWidth="150">
                                    <TextBlock
                                        HorizontalAlignment="Center"
                                        FontSize="18"
                                        FontWeight="SemiBold"
                                        Text="Account" />
                                    <StackPanel
                                        Margin="0,8,0,8"
                                        Padding="0"
                                        HorizontalAlignment="Center"
                                        Orientation="Vertical">
                                        <!--  Avatar  -->
                                        <!--  PersonPicture control not updating sometimes  -->
                                        <Border MaxWidth="100" CornerRadius="50">
                                            <Image Source="{Binding DisplayAvatar, Mode=OneWay, Converter={StaticResource UriToBitmapImageConverter}}" Stretch="Fill" />
                                        </Border>
                                        <TextBlock
                                            HorizontalAlignment="Center"
                                            FontWeight="Medium"
                                            Text="{Binding DisplayUserName}" />
                                    </StackPanel>
                                    <StackPanel HorizontalAlignment="Center" Orientation="Vertical">
                                        <HyperlinkButton
                                            Command="{Binding GalleryEditProfileCommand}"
                                            Content="Manage"
                                            Visibility="Collapsed" />
                                        <HyperlinkButton x:Uid="GalleryAccountLogout" Command="{Binding GalleryLogoutCommand}" />
                                    </StackPanel>
                                </StackPanel>
                            </Flyout>
                        </AppBarButton.Flyout>
                        <AppBarButton.Content>
                            <!--  Avatar  -->
                            <!--  Same animated image(?) for multiple PersonPicture control causes flicker(?)  -->
                            <Border
                                MaxWidth="100"
                                Margin="-22"
                                CornerRadius="50">
                                <Image Source="{Binding DisplayAvatar, Mode=OneWay, Converter={StaticResource UriToBitmapImageConverter}}" Stretch="Fill" />
                            </Border>
                        </AppBarButton.Content>
                    </AppBarButton>
                    <!--  Gallery Unauthorized  -->
                    <!--  Visibility="{Binding IsLoggedIn, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Reverse}"  -->
                    <AppBarButton Padding="0,0,0,0" Visibility="Collapsed">
                        <AppBarButton.Icon>
                            <SymbolIcon Symbol="Contact">
                                <SymbolIcon.RenderTransform>
                                    <TranslateTransform X="4" />
                                </SymbolIcon.RenderTransform>
                            </SymbolIcon>
                        </AppBarButton.Icon>
                        <AppBarButton.Flyout>
                            <Flyout>
                                <StackPanel MinWidth="150">
                                    <TextBlock
                                        x:Uid="GalleryAccount"
                                        HorizontalAlignment="Center"
                                        FontSize="18"
                                        FontWeight="SemiBold" />
                                    <PersonPicture Margin="0,5,0,0" />
                                    <HyperlinkButton
                                        x:Uid="GalleryAccountLogin"
                                        Margin="0,5,0,0"
                                        HorizontalAlignment="Center"
                                        Command="{Binding GalleryAuthCommand}" />
                                </StackPanel>
                            </Flyout>
                        </AppBarButton.Flyout>
                    </AppBarButton>
                    <!--  Settings  -->
                    <AppBarButton
                        MaxWidth="50"
                        Command="{Binding OpenSettingsCommand}"
                        LabelPosition="Collapsed">
                        <AppBarButton.Icon>
                            <FontIcon Glyph="&#xE713;" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <!--  Secondary Menu  -->
                    <CommandBar.SecondaryCommands>
                        <!--  Issue: Language culture not changing?  -->
                        <AppBarButton x:Uid="Theme" Command="{Binding OpenAppThemeCommand}">
                            <AppBarButton.Icon>
                                <FontIcon Glyph="&#xE790;" />
                            </AppBarButton.Icon>
                        </AppBarButton>
                        <AppBarButton x:Uid="Help" Command="{Binding OpenHelpCommand}">
                            <AppBarButton.Icon>
                                <FontIcon Glyph="&#xE897;" />
                            </AppBarButton.Icon>
                        </AppBarButton>
                        <AppBarButton x:Uid="About" Command="{Binding OpenAboutCommand}">
                            <AppBarButton.Icon>
                                <FontIcon Glyph="&#xE90A;" />
                            </AppBarButton.Icon>
                        </AppBarButton>
                    </CommandBar.SecondaryCommands>
                </CommandBar>
            </NavigationView.PaneFooter>
            <!--  content  -->
            <Frame x:Name="contentFrame" />
        </NavigationView>
        <!--  Show Errors  -->
        <InfoBar
            Title="{Binding ErrorNotification.Title}"
            Grid.Row="1"
            IsOpen="{Binding ErrorNotification.IsOpen, Mode=TwoWay}"
            Severity="Error">
            <StackPanel Margin="0,0,0,10" Spacing="5">
                <ScrollViewer MaxHeight="300">
                    <TextBlock Text="{Binding ErrorNotification.Message}" TextWrapping="Wrap" />
                </ScrollViewer>
                <HyperlinkButton NavigateUri="https://github.com/rocksdanister/lively/wiki/Common-Problems">
                    <TextBlock x:Uid="LearnMore" />
                </HyperlinkButton>
            </StackPanel>
        </InfoBar>
        <!--  Show Wallpaper Import Progress  -->
        <!--  Setting background because default Information infobar style color is transparent now.  -->
        <InfoBar
            Title="{Binding ImportNotification.Title}"
            Grid.Row="1"
            Background="{ThemeResource SystemAccentColorDark1}"
            IsClosable="False"
            IsOpen="{Binding ImportNotification.IsOpen}"
            Message="{Binding ImportNotification.Message}">
            <InfoBar.ActionButton>
                <Button x:Uid="Cancel" Command="{Binding AddWallpapersCancelCommand}" />
            </InfoBar.ActionButton>
            <ProgressBar
                Margin="-50,0,0,0"
                IsIndeterminate="{Binding ImportNotification.IsProgressIndeterminate}"
                Value="{Binding ImportNotification.Progress}" />
        </InfoBar>
        <InfoBar
            Name="screensaverSelectorBar"
            Grid.Row="1"
            Background="{ThemeResource SystemAccentColorDark1}"
            CloseButtonCommand="{x:Bind libraryVm.SelectItemCancelCommand}"
            IsOpen="{x:Bind libraryVm.IsSelectionOnlyMode, Mode=OneWay}"
            Message=""
            Severity="Informational"
            Visibility="{x:Bind libraryVm.IsSelectionOnlyMode, Mode=OneWay}">
            <TextBlock x:Uid="SelectScreensaverCustomMode" />
            <animations:Implicit.ShowAnimations>
                <animations:TranslationAnimation
                    From="0,-15,0"
                    To="0"
                    Duration="0:0:0.5" />
                <animations:OpacityAnimation
                    From="0"
                    To="1.0"
                    Duration="0:0:0.75" />
            </animations:Implicit.ShowAnimations>
            <animations:Implicit.HideAnimations>
                <animations:OpacityAnimation
                    From="1.0"
                    To="0"
                    Duration="0:0:0.5" />
            </animations:Implicit.HideAnimations>
        </InfoBar>
        <!--  Updated notification.  -->
        <TeachingTip
            Grid.Row="1"
            BorderBrush="{ThemeResource SystemControlBackgroundAccentBrush}"
            BorderThickness="0,3,0,0"
            IsOpen="{Binding IsUpdatedNotify, Mode=OneWay}"
            PlacementMargin="0,55,0,0"
            PreferredPlacement="TopRight">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="45" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Image ui:VisualExtensions.CenterPoint="22.5,22.5,0" Source="ms-appx:///Assets/icon-lively-48.png">
                    <animations:Implicit.ShowAnimations>
                        <animations:RotationInDegreesAnimation
                            From="0"
                            To="0"
                            Duration="0:0:1.2">
                            <animations:ScalarKeyFrame Value="-360" />
                        </animations:RotationInDegreesAnimation>
                        <animations:OpacityAnimation
                            From="0"
                            To="1.0"
                            Duration="0:0:0.5" />
                    </animations:Implicit.ShowAnimations>
                </Image>
                <StackPanel
                    Grid.Column="1"
                    Margin="7.5,-2.5,0,0"
                    VerticalAlignment="Center">
                    <TextBlock x:Uid="UpdateCompleted" FontWeight="SemiBold" />
                    <HyperlinkButton Command="{Binding OpenUpdateCommand}">
                        <TextBlock x:Uid="UpdateWhatsNew" />
                    </HyperlinkButton>
                </StackPanel>
            </Grid>
        </TeachingTip>
    </Grid>
</winex:WindowEx>